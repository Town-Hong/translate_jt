// JT format reading and visualization tools
// Copyright (C) 2013-2015 OPEN CASCADE SAS
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, version 2 of the License, or any later
// version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
// 
// Copy of the GNU General Public License is in LICENSE.txt and  
// on <http://www.gnu.org/licenses/>.

template<class T, int N>
void BVH_Sorter<T, N>::Perform (BVH_Set<T, N>*         theSet,
                                const Standard_Integer theAxis)
{
  Perform (theSet, theAxis, 0, theSet->Size() - 1);
}

// =======================================================================
// function : Perform
// purpose  :
// =======================================================================
template<class T, int N>
void BVH_Sorter<T, N>::Perform (BVH_Set<T, N>*         theSet,
                                const Standard_Integer theAxis,
                                const Standard_Integer theBegElement,
                                const Standard_Integer theEndElement)
{
  Standard_Integer aLft = theBegElement;
  Standard_Integer aRgh = theEndElement;

  T aPivot = theSet->Center ((aRgh + aLft) / 2, theAxis);

  while (aLft < aRgh)
  {
    while (theSet->Center (aLft, theAxis) < aPivot && aLft < theEndElement)
    {
      ++aLft;
    }

    while (theSet->Center (aRgh, theAxis) > aPivot && aRgh > theBegElement)
    {
      --aRgh;
    }

    if (aLft <= aRgh)
    {
      if (aLft != aRgh)
      {
        theSet->Swap (aLft, aRgh);
      }

      ++aLft;
      --aRgh;
    }
  }

  if (aRgh > theBegElement)
  {
    Perform (theSet, theAxis, theBegElement, aRgh);
  }

  if (aLft < theEndElement)
  {
    Perform (theSet, theAxis, aLft, theEndElement);
  }
}
